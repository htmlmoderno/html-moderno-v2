(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{239:function(e,t,n){"use strict";n.r(t);var r=n(3),o={name:"IntersectionObserver",props:{threshold:{type:Array,default:()=>[0]},root:{type:"undefined"!=typeof HTMLElement?HTMLElement:Object,default:()=>null},rootMargin:{type:String,default:()=>"300px"}},setup(e,{refs:t}){let n=null;const o=Object(r.ref)(!1);return Object(r.onMounted)(()=>{"IntersectionObserver"in window&&(n=new IntersectionObserver(e=>{e[0].isIntersecting&&(o.value=!0,n.disconnect())},e),n.observe(t.ioWrapper))}),Object(r.onDeactivated)(()=>{n.disconnect()}),{show:o}}},s=n(4),i=Object(s.a)(o,(function(){var e=this.$createElement;return(this._self._c||e)("div",{ref:"ioWrapper"},[this._t("default",null,{show:this.show})],2)}),[],!1,null,null,null);t.default=i.exports}}]);